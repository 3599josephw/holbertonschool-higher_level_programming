Import the BaseGeometry function
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests

normal input
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", 59)

area
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", 59)
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

negative int
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", -4)
    Traceback (most recent call last):
    ValueError: larry must be greater than 0

string into value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", "the lobster")
    Traceback (most recent call last):
    TypeError: larry must be an integer

nan
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", float('nan'))
    Traceback (most recent call last):
    TypeError: larry must be an integer

inf
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", float('inf'))
    Traceback (most recent call last):
    TypeError: larry must be an integer

decimal
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", 3.7)
    Traceback (most recent call last):
    TypeError: larry must be an integer

zero
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", 0)
    Traceback (most recent call last):
    ValueError: larry must be greater than 0

passing a list
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", [3, 5, 7])
    Traceback (most recent call last):
    TypeError: larry must be an integer

one parameter
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

no parameter
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

none
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", None)
    Traceback (most recent call last):
    TypeError: larry must be an integer

Putting a comma with a number
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", (4,))
    Traceback (most recent call last):
    TypeError: larry must be an integer

Boolean
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", (True))
    Traceback (most recent call last):
    TypeError: larry must be an integer

Dictionary
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("larry", {3, 4})
    Traceback (most recent call last):
    TypeError: larry must be an integer
